name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  test:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        # components: rustfmt, clippy
        components: rustfmt
        override: true

    - name: Set build variables
      run: |
        # We use these variables as part of the cache keys.
        echo "RUST_VERSION=$(rustc --version) >> $GITHUB_ENV"
        echo "CARGO_VERSION=$(cargo --version) >> $GITHUB_ENV"

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: cargo registry ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ env.CARGO_VERSION }} ${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          cargo registry ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ env.CARGO_VERSION }}

    # - name: Cache cargo build
    #   uses: actions/cache@v2
    #   with:
    #     path: target
    #     key: cargo build ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ env.CARGO_VERSION }} ${{ hashFiles('**/Cargo.toml') }}
    #     restore-keys: |
    #       cargo build ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ env.CARGO_VERSION }}

    - name: Lint with rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

    # - name: Lint with clippy
    #   if: always()
    #   uses: actions-rs/cargo@v1
    #   with:
    #     command: clippy
    #     args: --workspace --all-targets --all-features -- -D warnings

    - name: Run unit tests
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: test

